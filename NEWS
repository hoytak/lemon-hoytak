20XX-XX-XX Version 1.0 released

	This is the first stable release of LEMON. Compared to the 0.x
	release series, it features a considerably smaller but more
	matured set of tools. The API has also completely revised and
	changed in several places.

	* The major name changes compared to the 0.x series
          * Graph -> Digraph, UGraph -> Graph
          * Edge -> Arc, UEdge -> Edge
	  * source(UEdge)/target(UEdge) -> u(Edge)/v(Edge)
	* Other improvements
	  * Better documentation
	  * Reviewed and cleaned up codebase
	  * CMake based build system (along with the autotools based one)
	* Contents of the library (ported from 0.x)
	  * Algorithms
       	    * breadth-first search (bfs.h)
       	    * depth-first search (dfs.h)
       	    * Dijkstra's algorithm (dijkstra.h)
       	    * Kruskal's algorithm (kruskal.h)
    	  * Data structures
       	    * graph data structures (list_graph.h, smart_graph.h)
       	    * path data structures (path.h)
       	    * binary heap data structure (bin_heap.h)
       	    * union-find data structures (unionfind.h)
       	    * miscellaneous property maps (maps.h)
       	    * two dimensional vector and bounding box (dim2.h)
          * Concepts
       	    * graph structure concepts (concepts/digraph.h, concepts/graph.h,
              concepts/graph_components.h)
       	    * concepts for other structures (concepts/heap.h, concepts/maps.h,
	      concepts/path.h)
    	  * Tools
       	    * Mersenne twister random number generator (random.h)
       	    * tools for measuring cpu and wall clock time (time_measure.h)
       	    * tools for counting steps and events (counter.h)
       	    * tool for parsing command line arguments (arg_parser.h)
       	    * tool for visualizing graphs (graph_to_eps.h)
       	    * tools for reading and writing data in LEMON Graph Format
              (lgf_reader.h, lgf_writer.h)
            * tools to handle the anomalies of calculations with
	      floating point numbers (tolerance.h)
            * tools to manage RGB colors (color.h)
    	  * Infrastructure
       	    * extended assertion handling (assert.h)
       	    * exception classes and error handling (error.h)
      	    * concept checking (concept_check.h)
       	    * commonly used mathematical constants (math.h)
